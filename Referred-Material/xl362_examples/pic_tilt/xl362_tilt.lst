

HI-TECH Software PIC LITE Macro Assembler V9.81 build 7503 
                                                                                               Fri Jan 06 11:04:50 2012

HI-TECH Software Omniscient Code Generator (Lite mode) build 7503
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 7503"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F84
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 31 "C:\projects\xl362_examples\pic_tilt\xl362_tilt_main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 31 "C:\projects\xl362_examples\pic_tilt\xl362_tilt_main.c"
    45  2007  FFF2               	dw 0xFFFE & 0xFFFB & 0xFFF7 & 0xFFFF ;#
    46                           	FNCALL	_main,_xl362Write
    47                           	FNCALL	_xl362Write,_spistart
    48                           	FNCALL	_xl362Write,_xfer_byte
    49                           	FNCALL	_xl362Write,_spistop
    50                           	FNCALL	_spistop,_spidelay
    51                           	FNCALL	_xfer_byte,_spidelay
    52                           	FNCALL	_spistart,_spidelay
    53                           	FNROOT	_main
    54                           	FNCALL	intlevel1,_myisr
    55                           	global	intlevel1
    56                           	FNROOT	intlevel1
    57                           	global	_buffer
    58                           	global	_CSN
    59                           psect	text229,local,class=CODE,delta=2
    60                           global __ptext229
    61  0000                     __ptext229:
    62  0033                     _CSN	set	51
    63                           	global	_INTF
    64  0059                     _INTF	set	89
    65                           	global	_MISO
    66  0030                     _MISO	set	48
    67                           	global	_MOSI
    68  0031                     _MOSI	set	49
    69                           	global	_SCLK
    70  0032                     _SCLK	set	50
    71                           	global	_OPTION_REG
    72  0081                     _OPTION_REG	set	129
    73                           	global	_CSN_TRIS
    74  0433                     _CSN_TRIS	set	1075
    75                           	global	_MISO_TRIS
    76  0430                     _MISO_TRIS	set	1072
    77                           	global	_MOSI_TRIS
    78  0431                     _MOSI_TRIS	set	1073
    79                           	global	_SCLK_TRIS
    80  0432                     _SCLK_TRIS	set	1074
    81                           	file	"xl362_tilt.as"
    82                           	line	#
    83                           psect cinit,class=CODE,delta=2
    84                           global start_initialization
    85  0107                     start_initialization:
    86                           
    87                           psect	bssBANK0,class=BANK0,space=1
    88                           global __pbssBANK0
    89  001D                     __pbssBANK0:
    90  001D                     _buffer:
    91  001D                            ds      8
    92                           
    93                           ; Clear objects allocated to BANK0
    94                           psect cinit,class=CODE,delta=2
    95  0107  019D               	clrf	((__pbssBANK0)+0)&07Fh
    96  0108  019E               	clrf	((__pbssBANK0)+1)&07Fh
    97  0109  019F               	clrf	((__pbssBANK0)+2)&07Fh
    98  010A  01A0               	clrf	((__pbssBANK0)+3)&07Fh
    99  010B  01A1               	clrf	((__pbssBANK0)+4)&07Fh
   100  010C  01A2               	clrf	((__pbssBANK0)+5)&07Fh
   101  010D  01A3               	clrf	((__pbssBANK0)+6)&07Fh
   102  010E  01A4               	clrf	((__pbssBANK0)+7)&07Fh
   103                           psect cinit,class=CODE,delta=2
   104                           global end_of_initialization
   105                           
   106                           ;End of C runtime variable initialization code
   107                           
   108  010F                     end_of_initialization:
   109  010F  0183               clrf status
   110  0110  2810               ljmp _main	;jump to C main() function
   111                           psect	cstackCOMMON,class=COMMON,space=1
   112                           global __pcstackCOMMON
   113  0000                     __pcstackCOMMON:
   114                           	global	??_spistart
   115  0000                     ??_spistart:	; 0 bytes @ 0x0
   116                           	global	??_spistop
   117  0000                     ??_spistop:	; 0 bytes @ 0x0
   118                           	global	??_spidelay
   119  0000                     ??_spidelay:	; 0 bytes @ 0x0
   120                           psect	cstackBANK0,class=BANK0,space=1
   121                           global __pcstackBANK0
   122  000C                     __pcstackBANK0:
   123                           	global	?_spistart
   124  000C                     ?_spistart:	; 0 bytes @ 0x0
   125                           	global	?_spistop
   126  000C                     ?_spistop:	; 0 bytes @ 0x0
   127                           	global	?_main
   128  000C                     ?_main:	; 0 bytes @ 0x0
   129                           	global	?_myisr
   130  000C                     ?_myisr:	; 0 bytes @ 0x0
   131                           	global	??_myisr
   132  000C                     ??_myisr:	; 0 bytes @ 0x0
   133                           	global	?_spidelay
   134  000C                     ?_spidelay:	; 0 bytes @ 0x0
   135                           	global	?_xfer_byte
   136  000C                     ?_xfer_byte:	; 1 bytes @ 0x0
   137  000C                     	ds	4
   138                           	global	spidelay@delay
   139  0010                     spidelay@delay:	; 1 bytes @ 0x4
   140  0010                     	ds	1
   141                           	global	??_xfer_byte
   142  0011                     ??_xfer_byte:	; 0 bytes @ 0x5
   143  0011                     	ds	2
   144                           	global	xfer_byte@byte_out
   145  0013                     xfer_byte@byte_out:	; 1 bytes @ 0x7
   146  0013                     	ds	1
   147                           	global	xfer_byte@count
   148  0014                     xfer_byte@count:	; 1 bytes @ 0x8
   149  0014                     	ds	1
   150                           	global	xfer_byte@byte_in
   151  0015                     xfer_byte@byte_in:	; 1 bytes @ 0x9
   152  0015                     	ds	1
   153                           	global	?_xl362Write
   154  0016                     ?_xl362Write:	; 0 bytes @ 0xA
   155                           	global	xl362Write@regaddr
   156  0016                     xl362Write@regaddr:	; 1 bytes @ 0xA
   157  0016                     	ds	1
   158                           	global	xl362Write@buf
   159  0017                     xl362Write@buf:	; 1 bytes @ 0xB
   160  0017                     	ds	1
   161                           	global	??_xl362Write
   162  0018                     ??_xl362Write:	; 0 bytes @ 0xC
   163  0018                     	ds	1
   164                           	global	xl362Write@mybyte
   165  0019                     xl362Write@mybyte:	; 1 bytes @ 0xD
   166  0019                     	ds	1
   167                           	global	xl362Write@count
   168  001A                     xl362Write@count:	; 1 bytes @ 0xE
   169  001A                     	ds	1
   170                           	global	??_main
   171  001B                     ??_main:	; 0 bytes @ 0xF
   172  001B                     	ds	2
   173 ;;Data sizes: Strings 0, constant 0, data 0, bss 8, persistent 0 stack 0
   174 ;;Auto spaces:   Size  Autos    Used
   175 ;; COMMON           0      0       0
   176 ;; BANK0           66     17      25
   177                           
   178 ;;
   179 ;; Pointer list with targets:
   180                           
   181 ;; xl362Write@buf	PTR unsigned char  size(1) Largest target is 8
   182 ;;		 -> buffer(BANK0[8]), 
   183 ;;
   184                           
   185                           
   186 ;;
   187 ;; Critical Paths under _main in COMMON
   188 ;;
   189 ;;   None.
   190 ;;
   191 ;; Critical Paths under _myisr in COMMON
   192 ;;
   193 ;;   None.
   194 ;;
   195 ;; Critical Paths under _main in BANK0
   196 ;;
   197 ;;   _main->_xl362Write
   198 ;;   _xl362Write->_xfer_byte
   199 ;;   _spistop->_spidelay
   200 ;;   _xfer_byte->_spidelay
   201 ;;   _spistart->_spidelay
   202 ;;
   203 ;; Critical Paths under _myisr in BANK0
   204 ;;
   205 ;;   None.
   206                           
   207 ;;
   208 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   209 ;;
   210                           
   211 ;;
   212 ;;Call Graph Tables:
   213 ;;
   214 ;; ---------------------------------------------------------------------------------
   215 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   216 ;; ---------------------------------------------------------------------------------
   217 ;; (0) _main                                                 2     2      0     277
   218 ;;                                             15 BANK0      2     2      0
   219 ;;                         _xl362Write
   220 ;; ---------------------------------------------------------------------------------
   221 ;; (1) _xl362Write                                           5     3      2     277
   222 ;;                                             10 BANK0      5     3      2
   223 ;;                           _spistart
   224 ;;                          _xfer_byte
   225 ;;                            _spistop
   226 ;; ---------------------------------------------------------------------------------
   227 ;; (2) _spistop                                              0     0      0      23
   228 ;;                           _spidelay
   229 ;; ---------------------------------------------------------------------------------
   230 ;; (2) _xfer_byte                                            5     5      0     161
   231 ;;                                              5 BANK0      5     5      0
   232 ;;                           _spidelay
   233 ;; ---------------------------------------------------------------------------------
   234 ;; (2) _spistart                                             0     0      0      23
   235 ;;                           _spidelay
   236 ;; ---------------------------------------------------------------------------------
   237 ;; (3) _spidelay                                             1     1      0      23
   238 ;;                                              4 BANK0      1     1      0
   239 ;; ---------------------------------------------------------------------------------
   240 ;; Estimated maximum stack depth 3
   241 ;; ---------------------------------------------------------------------------------
   242 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   243 ;; ---------------------------------------------------------------------------------
   244 ;; (4) _myisr                                                4     4      0       0
   245 ;;                                              0 BANK0      4     4      0
   246 ;; ---------------------------------------------------------------------------------
   247 ;; Estimated maximum stack depth 4
   248 ;; ---------------------------------------------------------------------------------
   249                           
   250 ;; Call Graph Graphs:
   251                           
   252 ;; _main (ROOT)
   253 ;;   _xl362Write
   254 ;;     _spistart
   255 ;;       _spidelay
   256 ;;     _xfer_byte
   257 ;;       _spidelay
   258 ;;     _spistop
   259 ;;       _spidelay
   260 ;;
   261 ;; _myisr (ROOT)
   262 ;;
   263                           
   264 ;; Address spaces:
   265                           
   266 ;;Name               Size   Autos  Total    Cost      Usage
   267 ;;BITCOMMON            0      0       0       0        0.0%
   268 ;;EEDATA              40      0       0       0        0.0%
   269 ;;NULL                 0      0       0       0        0.0%
   270 ;;CODE                 0      0       0       0        0.0%
   271 ;;BITSFR0              0      0       0       1        0.0%
   272 ;;SFR0                 0      0       0       1        0.0%
   273 ;;COMMON               0      0       0       1        0.0%
   274 ;;BITSFR1              0      0       0       2        0.0%
   275 ;;SFR1                 0      0       0       2        0.0%
   276 ;;STACK                0      0       3       2        0.0%
   277 ;;BANK0               42     11      19       3       37.9%
   278 ;;ABS                  0      0      19       4        0.0%
   279 ;;BITBANK0            42      0       0       5        0.0%
   280 ;;DATA                 0      0      1C       6        0.0%
   281                           
   282                           	global	_main
   283                           psect	maintext,global,class=CODE,delta=2
   284                           global __pmaintext
   285  0010                     __pmaintext:
   286                           
   287 ;; *************** function _main *****************
   288 ;; Defined at:
   289 ;;		line 36 in file "C:\projects\xl362_examples\pic_tilt\xl362_tilt_main.c"
   290 ;; Parameters:    Size  Location     Type
   291 ;;		None
   292 ;; Auto vars:     Size  Location     Type
   293 ;;		None
   294 ;; Return value:  Size  Location     Type
   295 ;;		None               void
   296 ;; Registers used:
   297 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   298 ;; Tracked objects:
   299 ;;		On entry : 17F/0
   300 ;;		On exit  : 0/0
   301 ;;		Unchanged: 0/0
   302 ;; Data sizes:     COMMON   BANK0
   303 ;;      Params:         0       0
   304 ;;      Locals:         0       0
   305 ;;      Temps:          0       2
   306 ;;      Totals:         0       2
   307 ;;Total ram usage:        2 bytes
   308 ;; Hardware stack levels required when called:    4
   309 ;; This function calls:
   310 ;;		_xl362Write
   311 ;; This function is called by:
   312 ;;		Startup code after reset
   313 ;; This function uses a non-reentrant model
   314 ;;
   315                           psect	maintext
   316                           	file	"C:\projects\xl362_examples\pic_tilt\xl362_tilt_main.c"
   317                           	line	36
   318                           	global	__size_of_main
   319  006C                     	__size_of_main	equ	__end_of_main-_main
   320                           	
   321  0010                     _main:	
   322                           	opt	stack 4
   323                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   324                           	line	37
   325                           	
   326  0010                     l1736:	
   327                           ;xl362_tilt_main.c: 37: OPTION_REG = 0x40 ;
   328  0010  3040               	movlw	(040h)
   329  0011  1683               	bsf	status, 5	;RP0=1, select bank1
   330  0012  0081               	movwf	(129)^080h	;volatile
   331                           	line	40
   332                           ;xl362_tilt_main.c: 40: buffer[7] = 255;
   333  0013  30FF               	movlw	(0FFh)
   334  0014  1283               	bcf	status, 5	;RP0=0, select bank0
   335  0015  009B               	movwf	(??_main+0)+0
   336  0016  081B               	movf	(??_main+0)+0,w
   337  0017  00A4               	movwf	0+(_buffer)+07h
   338                           	line	41
   339                           ;xl362_tilt_main.c: 41: while(buffer[7]--);
   340  0018  281A               	goto	l1738
   341                           	
   342  0019                     l172:	
   343  0019  281A               	goto	l1738
   344                           	
   345  001A                     l171:	
   346                           	
   347  001A                     l1738:	
   348  001A  3001               	movlw	low(01h)
   349  001B  02A4               	subwf	0+(_buffer)+07h,f
   350  001C  0824               	movf	(0+(_buffer)+07h),w
   351  001D  3AFF               	xorlw	0FFh
   352  001E  1D03               	skipz
   353  001F  2821               	goto	u2321
   354  0020  2822               	goto	u2320
   355  0021                     u2321:
   356  0021  281A               	goto	l1738
   357  0022                     u2320:
   358  0022  2823               	goto	l1740
   359                           	
   360  0023                     l173:	
   361                           	line	43
   362                           	
   363  0023                     l1740:	
   364                           ;xl362_tilt_main.c: 43: buffer[0] = 0x52;
   365  0023  3052               	movlw	(052h)
   366  0024  009B               	movwf	(??_main+0)+0
   367  0025  081B               	movf	(??_main+0)+0,w
   368  0026  009D               	movwf	(_buffer)
   369                           	line	44
   370                           	
   371  0027                     l1742:	
   372                           ;xl362_tilt_main.c: 44: xl362Write(1,0x1f,buffer);
   373  0027  301F               	movlw	(01Fh)
   374  0028  009B               	movwf	(??_main+0)+0
   375  0029  081B               	movf	(??_main+0)+0,w
   376  002A  0096               	movwf	(?_xl362Write)
   377  002B  301D               	movlw	(_buffer)&0ffh
   378  002C  009C               	movwf	(??_main+1)+0
   379  002D  081C               	movf	(??_main+1)+0,w
   380  002E  0097               	movwf	(0+?_xl362Write+01h)
   381  002F  3001               	movlw	(01h)
   382  0030  20B8               	fcall	_xl362Write
   383                           	line	47
   384                           	
   385  0031                     l1744:	
   386                           ;xl362_tilt_main.c: 47: buffer[7] = 255;
   387  0031  30FF               	movlw	(0FFh)
   388  0032  1283               	bcf	status, 5	;RP0=0, select bank0
   389  0033  009B               	movwf	(??_main+0)+0
   390  0034  081B               	movf	(??_main+0)+0,w
   391  0035  00A4               	movwf	0+(_buffer)+07h
   392                           	line	48
   393                           ;xl362_tilt_main.c: 48: while(buffer[7]--);
   394  0036  2838               	goto	l1746
   395                           	
   396  0037                     l175:	
   397  0037  2838               	goto	l1746
   398                           	
   399  0038                     l174:	
   400                           	
   401  0038                     l1746:	
   402  0038  3001               	movlw	low(01h)
   403  0039  02A4               	subwf	0+(_buffer)+07h,f
   404  003A  0824               	movf	(0+(_buffer)+07h),w
   405  003B  3AFF               	xorlw	0FFh
   406  003C  1D03               	skipz
   407  003D  283F               	goto	u2331
   408  003E  2840               	goto	u2330
   409  003F                     u2331:
   410  003F  2838               	goto	l1746
   411  0040                     u2330:
   412  0040  2841               	goto	l1748
   413                           	
   414  0041                     l176:	
   415                           	line	51
   416                           	
   417  0041                     l1748:	
   418                           ;xl362_tilt_main.c: 51: buffer[0] = 105;
   419  0041  3069               	movlw	(069h)
   420  0042  009B               	movwf	(??_main+0)+0
   421  0043  081B               	movf	(??_main+0)+0,w
   422  0044  009D               	movwf	(_buffer)
   423                           	line	52
   424                           	
   425  0045                     l1750:	
   426                           ;xl362_tilt_main.c: 52: buffer[1] = 0 ;
   427  0045  019E               	clrf	0+(_buffer)+01h
   428                           	line	53
   429                           ;xl362_tilt_main.c: 53: buffer[2] = 3 ;
   430  0046  3003               	movlw	(03h)
   431  0047  009B               	movwf	(??_main+0)+0
   432  0048  081B               	movf	(??_main+0)+0,w
   433  0049  009F               	movwf	0+(_buffer)+02h
   434                           	line	54
   435                           ;xl362_tilt_main.c: 54: buffer[3] = 105;
   436  004A  3069               	movlw	(069h)
   437  004B  009B               	movwf	(??_main+0)+0
   438  004C  081B               	movf	(??_main+0)+0,w
   439  004D  00A0               	movwf	0+(_buffer)+03h
   440                           	line	55
   441                           	
   442  004E                     l1752:	
   443                           ;xl362_tilt_main.c: 55: buffer[4] = 0 ;
   444  004E  01A1               	clrf	0+(_buffer)+04h
   445                           	line	56
   446                           ;xl362_tilt_main.c: 56: buffer[5] = 37 ;
   447  004F  3025               	movlw	(025h)
   448  0050  009B               	movwf	(??_main+0)+0
   449  0051  081B               	movf	(??_main+0)+0,w
   450  0052  00A2               	movwf	0+(_buffer)+05h
   451                           	line	57
   452                           	
   453  0053                     l1754:	
   454                           ;xl362_tilt_main.c: 57: buffer[6] = 0 ;
   455  0053  01A3               	clrf	0+(_buffer)+06h
   456                           	line	60
   457                           ;xl362_tilt_main.c: 58: buffer[7] =
   458                           ;xl362_tilt_main.c: 59: 0x01 | 0x02 | 0x04
   459                           ;xl362_tilt_main.c: 60: | 0x08 | 0x10 | 0x20;
   460  0054  303F               	movlw	(03Fh)
   461  0055  009B               	movwf	(??_main+0)+0
   462  0056  081B               	movf	(??_main+0)+0,w
   463  0057  00A4               	movwf	0+(_buffer)+07h
   464                           	line	61
   465                           	
   466  0058                     l1756:	
   467                           ;xl362_tilt_main.c: 61: xl362Write(8,0x20,buffer);
   468  0058  3020               	movlw	(020h)
   469  0059  009B               	movwf	(??_main+0)+0
   470  005A  081B               	movf	(??_main+0)+0,w
   471  005B  0096               	movwf	(?_xl362Write)
   472  005C  301D               	movlw	(_buffer)&0ffh
   473  005D  009C               	movwf	(??_main+1)+0
   474  005E  081C               	movf	(??_main+1)+0,w
   475  005F  0097               	movwf	(0+?_xl362Write+01h)
   476  0060  3008               	movlw	(08h)
   477  0061  20B8               	fcall	_xl362Write
   478                           	line	64
   479                           	
   480  0062                     l1758:	
   481                           ;xl362_tilt_main.c: 64: buffer[0] = 0 ;
   482  0062  1283               	bcf	status, 5	;RP0=0, select bank0
   483  0063  019D               	clrf	(_buffer)
   484                           	line	65
   485                           	
   486  0064                     l1760:	
   487                           ;xl362_tilt_main.c: 65: buffer[1] = 0x40 ;
   488  0064  3040               	movlw	(040h)
   489  0065  009B               	movwf	(??_main+0)+0
   490  0066  081B               	movf	(??_main+0)+0,w
   491  0067  009E               	movwf	0+(_buffer)+01h
   492                           	line	67
   493                           	
   494  0068                     l1762:	
   495                           ;xl362_tilt_main.c: 66: buffer[2] =
   496                           ;xl362_tilt_main.c: 67: 0x00 | 0x00;
   497  0068  019F               	clrf	0+(_buffer)+02h
   498                           	line	69
   499                           	
   500  0069                     l1764:	
   501                           ;xl362_tilt_main.c: 68: buffer[3] =
   502                           ;xl362_tilt_main.c: 69: 0x02 | 0x00;
   503  0069  3002               	movlw	(02h)
   504  006A  009B               	movwf	(??_main+0)+0
   505  006B  081B               	movf	(??_main+0)+0,w
   506  006C  00A0               	movwf	0+(_buffer)+03h
   507                           	line	70
   508                           	
   509  006D                     l1766:	
   510                           ;xl362_tilt_main.c: 70: xl362Write(4,0x2a,buffer);
   511  006D  302A               	movlw	(02Ah)
   512  006E  009B               	movwf	(??_main+0)+0
   513  006F  081B               	movf	(??_main+0)+0,w
   514  0070  0096               	movwf	(?_xl362Write)
   515  0071  301D               	movlw	(_buffer)&0ffh
   516  0072  009C               	movwf	(??_main+1)+0
   517  0073  081C               	movf	(??_main+1)+0,w
   518  0074  0097               	movwf	(0+?_xl362Write+01h)
   519  0075  3004               	movlw	(04h)
   520  0076  20B8               	fcall	_xl362Write
   521  0077  2878               	goto	l1768
   522                           	line	73
   523                           ;xl362_tilt_main.c: 73: while(1){
   524                           	
   525  0078                     l177:	
   526                           	line	74
   527                           	
   528  0078                     l1768:	
   529                           # 74 "C:\projects\xl362_examples\pic_tilt\xl362_tilt_main.c"
   530  0078  0063               sleep ;#
   531                           psect	maintext
   532  0079  2878               	goto	l1768
   533                           	line	75
   534                           	
   535  007A                     l178:	
   536                           	line	73
   537  007A  2878               	goto	l1768
   538                           	
   539  007B                     l179:	
   540                           	line	76
   541                           	
   542  007B                     l180:	
   543                           	global	start
   544  007B  280F               	ljmp	start
   545                           	opt stack 0
   546                           GLOBAL	__end_of_main
   547  007C                     	__end_of_main:
   548 ;; =============== function _main ends ============
   549                           
   550                           	signat	_main,88
   551                           	global	_xl362Write
   552                           psect	text230,local,class=CODE,delta=2
   553                           global __ptext230
   554  00B8                     __ptext230:
   555                           
   556 ;; *************** function _xl362Write *****************
   557 ;; Defined at:
   558 ;;		line 46 in file "C:\projects\xl362_examples\lib\src\xl362_io_pic.c"
   559 ;; Parameters:    Size  Location     Type
   560 ;;  count           1    wreg     unsigned char 
   561 ;;  regaddr         1   10[BANK0 ] unsigned char 
   562 ;;  buf             1   11[BANK0 ] PTR unsigned char 
   563 ;;		 -> buffer(8), 
   564 ;; Auto vars:     Size  Location     Type
   565 ;;  count           1   14[BANK0 ] unsigned char 
   566 ;;  mybyte          1   13[BANK0 ] unsigned char 
   567 ;; Return value:  Size  Location     Type
   568 ;;		None               void
   569 ;; Registers used:
   570 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   571 ;; Tracked objects:
   572 ;;		On entry : 0/0
   573 ;;		On exit  : 0/0
   574 ;;		Unchanged: 0/0
   575 ;; Data sizes:     COMMON   BANK0
   576 ;;      Params:         0       2
   577 ;;      Locals:         0       2
   578 ;;      Temps:          0       1
   579 ;;      Totals:         0       5
   580 ;;Total ram usage:        5 bytes
   581 ;; Hardware stack levels used:    1
   582 ;; Hardware stack levels required when called:    3
   583 ;; This function calls:
   584 ;;		_spistart
   585 ;;		_xfer_byte
   586 ;;		_spistop
   587 ;; This function is called by:
   588 ;;		_main
   589 ;; This function uses a non-reentrant model
   590 ;;
   591                           psect	text230
   592                           	file	"C:\projects\xl362_examples\lib\src\xl362_io_pic.c"
   593                           	line	46
   594                           	global	__size_of_xl362Write
   595  0029                     	__size_of_xl362Write	equ	__end_of_xl362Write-_xl362Write
   596                           	
   597  00B8                     _xl362Write:	
   598                           	opt	stack 4
   599                           ; Regs used in _xl362Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   600                           ;xl362Write@count stored from wreg
   601                           	line	48
   602  00B8  1283               	bcf	status, 5	;RP0=0, select bank0
   603  00B9  009A               	movwf	(xl362Write@count)
   604                           	
   605  00BA                     l1726:	
   606                           ;xl362_io_pic.c: 47: char mybyte;
   607                           ;xl362_io_pic.c: 48: spistart();
   608  00BA  20EF               	fcall	_spistart
   609                           	line	49
   610                           ;xl362_io_pic.c: 49: mybyte = xfer_byte(0x0a);
   611  00BB  300A               	movlw	(0Ah)
   612  00BC  207C               	fcall	_xfer_byte
   613  00BD  1283               	bcf	status, 5	;RP0=0, select bank0
   614  00BE  0098               	movwf	(??_xl362Write+0)+0
   615  00BF  0818               	movf	(??_xl362Write+0)+0,w
   616  00C0  0099               	movwf	(xl362Write@mybyte)
   617                           	line	50
   618                           ;xl362_io_pic.c: 50: mybyte = xfer_byte(regaddr);
   619  00C1  0816               	movf	(xl362Write@regaddr),w
   620  00C2  207C               	fcall	_xfer_byte
   621  00C3  1283               	bcf	status, 5	;RP0=0, select bank0
   622  00C4  0098               	movwf	(??_xl362Write+0)+0
   623  00C5  0818               	movf	(??_xl362Write+0)+0,w
   624  00C6  0099               	movwf	(xl362Write@mybyte)
   625                           	line	51
   626                           ;xl362_io_pic.c: 51: while(count--) {
   627  00C7  28D6               	goto	l1732
   628                           	
   629  00C8                     l373:	
   630                           	line	52
   631                           	
   632  00C8                     l1728:	
   633                           ;xl362_io_pic.c: 52: mybyte = xfer_byte(*buf);
   634  00C8  0817               	movf	(xl362Write@buf),w
   635  00C9  0084               	movwf	fsr0
   636  00CA  1383               	bcf	status, 7	;select IRP bank0
   637  00CB  0800               	movf	indf,w
   638  00CC  207C               	fcall	_xfer_byte
   639  00CD  1283               	bcf	status, 5	;RP0=0, select bank0
   640  00CE  0098               	movwf	(??_xl362Write+0)+0
   641  00CF  0818               	movf	(??_xl362Write+0)+0,w
   642  00D0  0099               	movwf	(xl362Write@mybyte)
   643                           	line	53
   644                           	
   645  00D1                     l1730:	
   646                           ;xl362_io_pic.c: 53: buf++;
   647  00D1  3001               	movlw	(01h)
   648  00D2  0098               	movwf	(??_xl362Write+0)+0
   649  00D3  0818               	movf	(??_xl362Write+0)+0,w
   650  00D4  0797               	addwf	(xl362Write@buf),f
   651  00D5  28D6               	goto	l1732
   652                           	line	54
   653                           	
   654  00D6                     l372:	
   655                           	line	51
   656                           	
   657  00D6                     l1732:	
   658  00D6  3001               	movlw	low(01h)
   659  00D7  029A               	subwf	(xl362Write@count),f
   660  00D8  081A               	movf	((xl362Write@count)),w
   661  00D9  3AFF               	xorlw	0FFh
   662  00DA  1D03               	skipz
   663  00DB  28DD               	goto	u2311
   664  00DC  28DE               	goto	u2310
   665  00DD                     u2311:
   666  00DD  28C8               	goto	l1728
   667  00DE                     u2310:
   668  00DE  28DF               	goto	l1734
   669                           	
   670  00DF                     l374:	
   671                           	line	55
   672                           	
   673  00DF                     l1734:	
   674                           ;xl362_io_pic.c: 54: }
   675                           ;xl362_io_pic.c: 55: spistop();
   676  00DF  2111               	fcall	_spistop
   677                           	line	56
   678                           	
   679  00E0                     l375:	
   680  00E0  0008               	return
   681                           	opt stack 0
   682                           GLOBAL	__end_of_xl362Write
   683  00E1                     	__end_of_xl362Write:
   684 ;; =============== function _xl362Write ends ============
   685                           
   686                           	signat	_xl362Write,12408
   687                           	global	_spistop
   688                           psect	text231,local,class=CODE,delta=2
   689                           global __ptext231
   690  0111                     __ptext231:
   691                           
   692 ;; *************** function _spistop *****************
   693 ;; Defined at:
   694 ;;		line 97 in file "C:\projects\xl362_examples\lib\src\xl362_io_pic.c"
   695 ;; Parameters:    Size  Location     Type
   696 ;;		None
   697 ;; Auto vars:     Size  Location     Type
   698 ;;		None
   699 ;; Return value:  Size  Location     Type
   700 ;;		None               void
   701 ;; Registers used:
   702 ;;		wreg, status,2, status,0, pclath, cstack
   703 ;; Tracked objects:
   704 ;;		On entry : 0/0
   705 ;;		On exit  : 0/0
   706 ;;		Unchanged: 0/0
   707 ;; Data sizes:     COMMON   BANK0
   708 ;;      Params:         0       0
   709 ;;      Locals:         0       0
   710 ;;      Temps:          0       0
   711 ;;      Totals:         0       0
   712 ;;Total ram usage:        0 bytes
   713 ;; Hardware stack levels used:    1
   714 ;; Hardware stack levels required when called:    2
   715 ;; This function calls:
   716 ;;		_spidelay
   717 ;; This function is called by:
   718 ;;		_xl362Write
   719 ;;		_xl362Read
   720 ;;		_xl362FifoRead
   721 ;; This function uses a non-reentrant model
   722 ;;
   723                           psect	text231
   724                           	file	"C:\projects\xl362_examples\lib\src\xl362_io_pic.c"
   725                           	line	97
   726                           	global	__size_of_spistop
   727  0004                     	__size_of_spistop	equ	__end_of_spistop-_spistop
   728                           	
   729  0111                     _spistop:	
   730                           	opt	stack 4
   731                           ; Regs used in _spistop: [wreg+status,2+status,0+pclath+cstack]
   732                           	line	98
   733                           	
   734  0111                     l1722:	
   735                           ;xl362_io_pic.c: 98: CSN=1;
   736  0111  1283               	bcf	status, 5	;RP0=0, select bank0
   737  0112  1586               	bsf	(51/8),(51)&7
   738                           	line	99
   739                           	
   740  0113                     l1724:	
   741                           ;xl362_io_pic.c: 99: spidelay();
   742  0113  20E1               	fcall	_spidelay
   743                           	line	100
   744                           	
   745  0114                     l399:	
   746  0114  0008               	return
   747                           	opt stack 0
   748                           GLOBAL	__end_of_spistop
   749  0115                     	__end_of_spistop:
   750 ;; =============== function _spistop ends ============
   751                           
   752                           	signat	_spistop,88
   753                           	global	_xfer_byte
   754                           psect	text232,local,class=CODE,delta=2
   755                           global __ptext232
   756  007C                     __ptext232:
   757                           
   758 ;; *************** function _xfer_byte *****************
   759 ;; Defined at:
   760 ;;		line 102 in file "C:\projects\xl362_examples\lib\src\xl362_io_pic.c"
   761 ;; Parameters:    Size  Location     Type
   762 ;;  byte_out        1    wreg     unsigned char 
   763 ;; Auto vars:     Size  Location     Type
   764 ;;  byte_out        1    7[BANK0 ] unsigned char 
   765 ;;  byte_in         1    9[BANK0 ] unsigned char 
   766 ;;  count           1    8[BANK0 ] unsigned char 
   767 ;; Return value:  Size  Location     Type
   768 ;;                  1    wreg      unsigned char 
   769 ;; Registers used:
   770 ;;		wreg, status,2, status,0, pclath, cstack
   771 ;; Tracked objects:
   772 ;;		On entry : 0/0
   773 ;;		On exit  : 0/0
   774 ;;		Unchanged: 0/0
   775 ;; Data sizes:     COMMON   BANK0
   776 ;;      Params:         0       0
   777 ;;      Locals:         0       3
   778 ;;      Temps:          0       2
   779 ;;      Totals:         0       5
   780 ;;Total ram usage:        5 bytes
   781 ;; Hardware stack levels used:    1
   782 ;; Hardware stack levels required when called:    2
   783 ;; This function calls:
   784 ;;		_spidelay
   785 ;; This function is called by:
   786 ;;		_xl362Write
   787 ;;		_xl362Read
   788 ;;		_xl362FifoRead
   789 ;; This function uses a non-reentrant model
   790 ;;
   791                           psect	text232
   792                           	file	"C:\projects\xl362_examples\lib\src\xl362_io_pic.c"
   793                           	line	102
   794                           	global	__size_of_xfer_byte
   795  003C                     	__size_of_xfer_byte	equ	__end_of_xfer_byte-_xfer_byte
   796                           	
   797  007C                     _xfer_byte:	
   798                           	opt	stack 4
   799                           ; Regs used in _xfer_byte: [wreg+status,2+status,0+pclath+cstack]
   800                           ;xfer_byte@byte_out stored from wreg
   801                           	line	104
   802  007C  1283               	bcf	status, 5	;RP0=0, select bank0
   803  007D  0093               	movwf	(xfer_byte@byte_out)
   804                           	
   805  007E                     l1688:	
   806                           ;xl362_io_pic.c: 103: char count;
   807                           ;xl362_io_pic.c: 104: char byte_in =0;
   808  007E  0195               	clrf	(xfer_byte@byte_in)
   809                           	line	105
   810                           	
   811  007F                     l1690:	
   812                           ;xl362_io_pic.c: 105: for(count=8;count>0;count--) {
   813  007F  3008               	movlw	(08h)
   814  0080  0091               	movwf	(??_xfer_byte+0)+0
   815  0081  0811               	movf	(??_xfer_byte+0)+0,w
   816  0082  0094               	movwf	(xfer_byte@count)
   817                           	
   818  0083                     l1692:	
   819  0083  0894               	movf	(xfer_byte@count),f
   820  0084  1D03               	skipz
   821  0085  2887               	goto	u2271
   822  0086  2888               	goto	u2270
   823  0087                     u2271:
   824  0087  288A               	goto	l402
   825  0088                     u2270:
   826  0088  28B5               	goto	l1718
   827                           	
   828  0089                     l1694:	
   829  0089  28B5               	goto	l1718
   830                           	
   831  008A                     l402:	
   832                           	line	106
   833                           ;xl362_io_pic.c: 106: if(byte_out & 0x80) {
   834  008A  1F93               	btfss	(xfer_byte@byte_out),(7)&7
   835  008B  288D               	goto	u2281
   836  008C  288E               	goto	u2280
   837  008D                     u2281:
   838  008D  2890               	goto	l404
   839  008E                     u2280:
   840                           	line	107
   841                           	
   842  008E                     l1696:	
   843                           ;xl362_io_pic.c: 107: MOSI = 1;
   844  008E  1486               	bsf	(49/8),(49)&7
   845                           	line	108
   846                           ;xl362_io_pic.c: 108: } else{
   847  008F  2892               	goto	l1698
   848                           	
   849  0090                     l404:	
   850                           	line	109
   851                           ;xl362_io_pic.c: 109: MOSI = 0;
   852  0090  1086               	bcf	(49/8),(49)&7
   853  0091  2892               	goto	l1698
   854                           	line	110
   855                           	
   856  0092                     l405:	
   857                           	line	111
   858                           	
   859  0092                     l1698:	
   860                           ;xl362_io_pic.c: 110: }
   861                           ;xl362_io_pic.c: 111: spidelay();
   862  0092  20E1               	fcall	_spidelay
   863                           	line	112
   864                           	
   865  0093                     l1700:	
   866                           ;xl362_io_pic.c: 112: byte_out = byte_out <<1;
   867  0093  1283               	bcf	status, 5	;RP0=0, select bank0
   868  0094  0813               	movf	(xfer_byte@byte_out),w
   869  0095  0091               	movwf	(??_xfer_byte+0)+0
   870  0096  0711               	addwf	(??_xfer_byte+0)+0,w
   871  0097  0092               	movwf	(??_xfer_byte+1)+0
   872  0098  0812               	movf	(??_xfer_byte+1)+0,w
   873  0099  0093               	movwf	(xfer_byte@byte_out)
   874                           	line	113
   875                           	
   876  009A                     l1702:	
   877                           ;xl362_io_pic.c: 113: byte_in = byte_in <<1;
   878  009A  0815               	movf	(xfer_byte@byte_in),w
   879  009B  0091               	movwf	(??_xfer_byte+0)+0
   880  009C  0711               	addwf	(??_xfer_byte+0)+0,w
   881  009D  0092               	movwf	(??_xfer_byte+1)+0
   882  009E  0812               	movf	(??_xfer_byte+1)+0,w
   883  009F  0095               	movwf	(xfer_byte@byte_in)
   884                           	line	114
   885                           	
   886  00A0                     l1704:	
   887                           ;xl362_io_pic.c: 114: SCLK = 1;
   888  00A0  1506               	bsf	(50/8),(50)&7
   889                           	line	115
   890                           	
   891  00A1                     l1706:	
   892                           ;xl362_io_pic.c: 115: if(MISO) byte_in +=1;
   893  00A1  1C06               	btfss	(48/8),(48)&7
   894  00A2  28A4               	goto	u2291
   895  00A3  28A5               	goto	u2290
   896  00A4                     u2291:
   897  00A4  28AA               	goto	l1710
   898  00A5                     u2290:
   899                           	
   900  00A5                     l1708:	
   901  00A5  3001               	movlw	(01h)
   902  00A6  0091               	movwf	(??_xfer_byte+0)+0
   903  00A7  0811               	movf	(??_xfer_byte+0)+0,w
   904  00A8  0795               	addwf	(xfer_byte@byte_in),f
   905  00A9  28AA               	goto	l1710
   906                           	
   907  00AA                     l406:	
   908                           	line	116
   909                           	
   910  00AA                     l1710:	
   911                           ;xl362_io_pic.c: 116: spidelay();
   912  00AA  20E1               	fcall	_spidelay
   913                           	line	117
   914                           	
   915  00AB                     l1712:	
   916                           ;xl362_io_pic.c: 117: SCLK = 0;
   917  00AB  1283               	bcf	status, 5	;RP0=0, select bank0
   918  00AC  1106               	bcf	(50/8),(50)&7
   919                           	line	105
   920                           	
   921  00AD                     l1714:	
   922  00AD  3001               	movlw	low(01h)
   923  00AE  0294               	subwf	(xfer_byte@count),f
   924                           	
   925  00AF                     l1716:	
   926  00AF  0894               	movf	(xfer_byte@count),f
   927  00B0  1D03               	skipz
   928  00B1  28B3               	goto	u2301
   929  00B2  28B4               	goto	u2300
   930  00B3                     u2301:
   931  00B3  288A               	goto	l402
   932  00B4                     u2300:
   933  00B4  28B5               	goto	l1718
   934                           	
   935  00B5                     l403:	
   936                           	line	119
   937                           	
   938  00B5                     l1718:	
   939                           ;xl362_io_pic.c: 118: }
   940                           ;xl362_io_pic.c: 119: return(byte_in);
   941  00B5  0815               	movf	(xfer_byte@byte_in),w
   942  00B6  28B7               	goto	l407
   943                           	
   944  00B7                     l1720:	
   945                           	line	120
   946                           	
   947  00B7                     l407:	
   948  00B7  0008               	return
   949                           	opt stack 0
   950                           GLOBAL	__end_of_xfer_byte
   951  00B8                     	__end_of_xfer_byte:
   952 ;; =============== function _xfer_byte ends ============
   953                           
   954                           	signat	_xfer_byte,4217
   955                           	global	_spistart
   956                           psect	text233,local,class=CODE,delta=2
   957                           global __ptext233
   958  00EF                     __ptext233:
   959                           
   960 ;; *************** function _spistart *****************
   961 ;; Defined at:
   962 ;;		line 88 in file "C:\projects\xl362_examples\lib\src\xl362_io_pic.c"
   963 ;; Parameters:    Size  Location     Type
   964 ;;		None
   965 ;; Auto vars:     Size  Location     Type
   966 ;;		None
   967 ;; Return value:  Size  Location     Type
   968 ;;		None               void
   969 ;; Registers used:
   970 ;;		wreg, status,2, status,0, pclath, cstack
   971 ;; Tracked objects:
   972 ;;		On entry : 0/0
   973 ;;		On exit  : 0/0
   974 ;;		Unchanged: 0/0
   975 ;; Data sizes:     COMMON   BANK0
   976 ;;      Params:         0       0
   977 ;;      Locals:         0       0
   978 ;;      Temps:          0       0
   979 ;;      Totals:         0       0
   980 ;;Total ram usage:        0 bytes
   981 ;; Hardware stack levels used:    1
   982 ;; Hardware stack levels required when called:    2
   983 ;; This function calls:
   984 ;;		_spidelay
   985 ;; This function is called by:
   986 ;;		_xl362Write
   987 ;;		_xl362Read
   988 ;;		_xl362FifoRead
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           psect	text233
   992                           	file	"C:\projects\xl362_examples\lib\src\xl362_io_pic.c"
   993                           	line	88
   994                           	global	__size_of_spistart
   995  000C                     	__size_of_spistart	equ	__end_of_spistart-_spistart
   996                           	
   997  00EF                     _spistart:	
   998                           	opt	stack 4
   999                           ; Regs used in _spistart: [wreg+status,2+status,0+pclath+cstack]
  1000                           	line	89
  1001                           	
  1002  00EF                     l1684:	
  1003                           ;xl362_io_pic.c: 89: SCLK = 0;
  1004  00EF  1283               	bcf	status, 5	;RP0=0, select bank0
  1005  00F0  1106               	bcf	(50/8),(50)&7
  1006                           	line	90
  1007                           ;xl362_io_pic.c: 90: SCLK_TRIS = 0;
  1008  00F1  1683               	bsf	status, 5	;RP0=1, select bank1
  1009  00F2  1106               	bcf	(1074/8)^080h,(1074)&7
  1010                           	line	91
  1011                           ;xl362_io_pic.c: 91: CSN = 0;
  1012  00F3  1283               	bcf	status, 5	;RP0=0, select bank0
  1013  00F4  1186               	bcf	(51/8),(51)&7
  1014                           	line	92
  1015                           ;xl362_io_pic.c: 92: CSN_TRIS = 0;
  1016  00F5  1683               	bsf	status, 5	;RP0=1, select bank1
  1017  00F6  1186               	bcf	(1075/8)^080h,(1075)&7
  1018                           	line	93
  1019                           ;xl362_io_pic.c: 93: MISO_TRIS = 1;
  1020  00F7  1406               	bsf	(1072/8)^080h,(1072)&7
  1021                           	line	94
  1022                           ;xl362_io_pic.c: 94: MOSI_TRIS = 0;
  1023  00F8  1086               	bcf	(1073/8)^080h,(1073)&7
  1024                           	line	95
  1025                           	
  1026  00F9                     l1686:	
  1027                           ;xl362_io_pic.c: 95: spidelay();
  1028  00F9  20E1               	fcall	_spidelay
  1029                           	line	96
  1030                           	
  1031  00FA                     l396:	
  1032  00FA  0008               	return
  1033                           	opt stack 0
  1034                           GLOBAL	__end_of_spistart
  1035  00FB                     	__end_of_spistart:
  1036 ;; =============== function _spistart ends ============
  1037                           
  1038                           	signat	_spistart,88
  1039                           	global	_spidelay
  1040                           psect	text234,local,class=CODE,delta=2
  1041                           global __ptext234
  1042  00E1                     __ptext234:
  1043                           
  1044 ;; *************** function _spidelay *****************
  1045 ;; Defined at:
  1046 ;;		line 84 in file "C:\projects\xl362_examples\lib\src\xl362_io_pic.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;		None
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;  delay           1    4[BANK0 ] unsigned char 
  1051 ;; Return value:  Size  Location     Type
  1052 ;;		None               void
  1053 ;; Registers used:
  1054 ;;		wreg, status,2, status,0
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMMON   BANK0
  1060 ;;      Params:         0       0
  1061 ;;      Locals:         0       1
  1062 ;;      Temps:          0       0
  1063 ;;      Totals:         0       1
  1064 ;;Total ram usage:        1 bytes
  1065 ;; Hardware stack levels used:    1
  1066 ;; Hardware stack levels required when called:    1
  1067 ;; This function calls:
  1068 ;;		Nothing
  1069 ;; This function is called by:
  1070 ;;		_spistart
  1071 ;;		_spistop
  1072 ;;		_xfer_byte
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           psect	text234
  1076                           	file	"C:\projects\xl362_examples\lib\src\xl362_io_pic.c"
  1077                           	line	84
  1078                           	global	__size_of_spidelay
  1079  000E                     	__size_of_spidelay	equ	__end_of_spidelay-_spidelay
  1080                           	
  1081  00E1                     _spidelay:	
  1082                           	opt	stack 4
  1083                           ; Regs used in _spidelay: [wreg+status,2+status,0]
  1084                           	line	85
  1085                           	
  1086  00E1                     l1680:	
  1087                           ;xl362_io_pic.c: 85: char delay =1;
  1088  00E1  1283               	bcf	status, 5	;RP0=0, select bank0
  1089  00E2  0190               	clrf	(spidelay@delay)
  1090  00E3  1403               	bsf	status,0
  1091  00E4  0D90               	rlf	(spidelay@delay),f
  1092                           	line	86
  1093                           ;xl362_io_pic.c: 86: while(--delay != 0)continue;
  1094  00E5  28E7               	goto	l1682
  1095                           	
  1096  00E6                     l391:	
  1097  00E6  28E7               	goto	l1682
  1098                           	
  1099  00E7                     l390:	
  1100                           	
  1101  00E7                     l1682:	
  1102  00E7  3001               	movlw	low(01h)
  1103  00E8  0290               	subwf	(spidelay@delay),f
  1104  00E9  1D03               	btfss	status,2
  1105  00EA  28EC               	goto	u2261
  1106  00EB  28ED               	goto	u2260
  1107  00EC                     u2261:
  1108  00EC  28E7               	goto	l1682
  1109  00ED                     u2260:
  1110  00ED  28EE               	goto	l393
  1111                           	
  1112  00EE                     l392:	
  1113                           	line	87
  1114                           	
  1115  00EE                     l393:	
  1116  00EE  0008               	return
  1117                           	opt stack 0
  1118                           GLOBAL	__end_of_spidelay
  1119  00EF                     	__end_of_spidelay:
  1120 ;; =============== function _spidelay ends ============
  1121                           
  1122                           	signat	_spidelay,88
  1123                           	global	_myisr
  1124                           psect	text235,local,class=CODE,delta=2
  1125                           global __ptext235
  1126  00FB                     __ptext235:
  1127                           
  1128 ;; *************** function _myisr *****************
  1129 ;; Defined at:
  1130 ;;		line 79 in file "C:\projects\xl362_examples\pic_tilt\xl362_tilt_main.c"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;		None
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;		None
  1135 ;; Return value:  Size  Location     Type
  1136 ;;		None               void
  1137 ;; Registers used:
  1138 ;;		None
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMMON   BANK0
  1144 ;;      Params:         0       0
  1145 ;;      Locals:         0       0
  1146 ;;      Temps:          0       4
  1147 ;;      Totals:         0       4
  1148 ;;Total ram usage:        4 bytes
  1149 ;; Hardware stack levels used:    1
  1150 ;; This function calls:
  1151 ;;		Nothing
  1152 ;; This function is called by:
  1153 ;;		Interrupt level 1
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           psect	text235
  1157                           	file	"C:\projects\xl362_examples\pic_tilt\xl362_tilt_main.c"
  1158                           	line	79
  1159                           	global	__size_of_myisr
  1160  000C                     	__size_of_myisr	equ	__end_of_myisr-_myisr
  1161                           	
  1162  00FB                     _myisr:	
  1163                           	opt	stack 4
  1164                           ; Regs used in _myisr: []
  1165                           psect	intentry,class=CODE,delta=2
  1166                           global __pintentry
  1167  0004                     __pintentry:
  1168                           global interrupt_function
  1169  0004                     interrupt_function:
  1170                           	global saved_w
  1171  004E                     	saved_w	set	btemp+0
  1172  0004  00CE               	movwf	saved_w
  1173  0005  0E03               	swapf	status,w
  1174  0006  1283               	bcf	status, 5	;RP0=0, select bank0
  1175  0007  008C               	movwf	(??_myisr+0)
  1176  0008  0804               	movf	fsr0,w
  1177  0009  008D               	movwf	(??_myisr+1)
  1178  000A  080A               	movf	pclath,w
  1179  000B  008E               	movwf	(??_myisr+2)
  1180  000C  084F               	movf	btemp+1,w
  1181  000D  008F               	movwf	(??_myisr+3)
  1182  000E  28FB               	ljmp	_myisr
  1183                           psect	text235
  1184                           	line	80
  1185                           	
  1186  00FB                     i1l1658:	
  1187                           ;xl362_tilt_main.c: 80: INTF=0;
  1188  00FB  108B               	bcf	(89/8),(89)&7
  1189                           	line	81
  1190                           	
  1191  00FC                     i1l183:	
  1192  00FC  080F               	movf	(??_myisr+3),w
  1193  00FD  00CF               	movwf	btemp+1
  1194  00FE  080E               	movf	(??_myisr+2),w
  1195  00FF  008A               	movwf	pclath
  1196  0100  080D               	movf	(??_myisr+1),w
  1197  0101  0084               	movwf	fsr0
  1198  0102  0E0C               	swapf	(??_myisr+0)^00h,w
  1199  0103  0083               	movwf	status
  1200  0104  0ECE               	swapf	saved_w,f
  1201  0105  0E4E               	swapf	saved_w,w
  1202  0106  0009               	retfie
  1203                           	opt stack 0
  1204                           GLOBAL	__end_of_myisr
  1205  0107                     	__end_of_myisr:
  1206 ;; =============== function _myisr ends ============
  1207                           
  1208                           	signat	_myisr,88
  1209                           psect	text236,local,class=CODE,delta=2
  1210                           global __ptext236
  1211  0000                     __ptext236:
  1212                           	global	btemp
  1213  004E                     	btemp set 04Eh
  1214                           
  1215                           	DABS	1,78,2	;btemp
  1216                           	global	wtemp0
  1217  004E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.81 build 7503 
Symbol Table                                                                                   Fri Jan 06 11:04:50 2012

                 l402 008A                   l403 00B5                   l171 001A                   l404 0090  
                 l180 007B                   l172 0019                   l405 0092                   l173 0023  
                 l406 00AA                   l174 0038                   l407 00B7                   l175 0037  
                 l176 0041                   l177 0078                   l178 007A                   l179 007B  
                 l372 00D6                   l373 00C8                   l390 00E7                   l374 00DF  
                 l391 00E6                   l375 00E0                   l392 00EE                   l393 00EE  
                 l396 00FA                   l399 0114                   _CSN 0033                   fsr0 0004  
                 indf 0000                  l1700 0093                  l1710 00AA                  l1702 009A  
                l1720 00B7                  l1712 00AB                  l1704 00A0                  l1714 00AD  
                l1706 00A1                  l1722 0111                  l1730 00D1                  l1716 00AF  
                l1708 00A5                  l1724 0113                  l1732 00D6                  l1740 0023  
                l1718 00B5                  l1734 00DF                  l1726 00BA                  l1750 0045  
                l1742 0027                  l1680 00E1                  l1728 00C8                  l1760 0064  
                l1752 004E                  l1744 0031                  l1736 0010                  l1682 00E7  
                l1690 007F                  l1762 0068                  l1754 0053                  l1746 0038  
                l1738 001A                  l1684 00EF                  l1692 0083                  l1764 0069  
                l1756 0058                  l1748 0041                  l1686 00F9                  l1694 0089  
                l1766 006D                  l1758 0062                  l1696 008E                  l1688 007E  
                l1768 0078                  l1698 0092                  u2300 00B4                  u2301 00B3  
                u2310 00DE                  u2311 00DD                  u2320 0022                  u2321 0021  
                u2330 0040                  u2331 003F                  u2260 00ED                  u2261 00EC  
                u2270 0088                  u2271 0087                  u2280 008E                  u2281 008D  
                u2290 00A5                  u2291 00A4                  _INTF 0059                  _MISO 0030  
                _SCLK 0032                  _MOSI 0031                  _main 0010                  btemp 004E  
                start 000F                 ?_main 000C                 i1l183 00FC                 _myisr 00FB  
               pclath 000A                 status 0003       __end_of_spistop 0115                 wtemp0 004E  
       spidelay@delay 0010          __end_of_main 007C                ??_main 001B                ?_myisr 000C  
              i1l1658 00FB                _buffer 001D                saved_w 004E      __end_of_spidelay 00EF  
   xfer_byte@byte_out 0013      __end_of_spistart 00FB             ??_spistop 0000        __pcstackCOMMON 0000  
       __end_of_myisr 0107               ??_myisr 000C            __pbssBANK0 001D            _xl362Write 00B8  
   xl362Write@regaddr 0016            __pmaintext 0010            __pintentry 0004    __size_of_xfer_byte 003C  
      xfer_byte@count 0014             ?_spidelay 000C             ?_spistart 000C               _spistop 0111  
end_of_initialization 010F           ?_xl362Write 0016         xl362Write@buf 0017             _MISO_TRIS 0430  
           _SCLK_TRIS 0432     __end_of_xfer_byte 00B8             _MOSI_TRIS 0431            ??_spidelay 0000  
          ??_spistart 0000   __size_of_xl362Write 0029   start_initialization 0107      xfer_byte@byte_in 0015  
       __pcstackBANK0 000C      xl362Write@mybyte 0019             __ptext230 00B8             __ptext231 0111  
           __ptext232 007C             __ptext233 00EF             __ptext234 00E1             __ptext235 00FB  
           __ptext236 0000             __ptext229 0000     __size_of_spidelay 000E     __size_of_spistart 000C  
            ?_spistop 000C        __size_of_myisr 000C     interrupt_function 0004              _CSN_TRIS 0433  
        ??_xl362Write 0018             _xfer_byte 007C    __end_of_xl362Write 00E1            ?_xfer_byte 000C  
     xl362Write@count 001A      __size_of_spistop 0004         __size_of_main 006C              _spidelay 00E1  
            _spistart 00EF              intlevel1 0000           ??_xfer_byte 0011            _OPTION_REG 0081  
